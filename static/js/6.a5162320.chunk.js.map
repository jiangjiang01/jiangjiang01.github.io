{"version":3,"sources":["unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx"],"names":["LoginScreen","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","onFinish","values","catch","Item","name","rules","required","message","type","placeholder","id","LongButton","loading","htmlType","RegisterScreen","register","cpassword","password","Error","UnauthenticatedApp","useState","isRegister","setIsRegister","error","setError","useDocumentTitle","Container","Header","Background","ShadowCard","Title","onClick","styled","Button","h2","div","Left","Right","header","Logo","Card"],"mappings":"oTAOaA,EAAc,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,QAKpBC,EAAUC,cAAVD,MACR,EAA2BE,iBAASC,EAAW,CAAEC,cAAc,IAAvDC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UAEb,OACE,eAAC,IAAD,CAAMC,SARa,SAACC,GACpBH,EAAIL,EAAMQ,IAASC,MAAMV,IAOzB,UACE,cAAC,IAAKW,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAAhE,SACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,qBAAMC,GAAG,eAE1C,cAAC,IAAKP,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAAhE,SACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,YAAY,eAAKC,GAAG,eAE7C,cAAC,IAAKP,KAAN,UACE,cAACQ,EAAD,CAAYC,QAASb,EAAWc,SAAS,SAASL,KAAK,UAAvD,gC,yBCjBKM,EAAiB,SAAC,GAA6D,IAA3DtB,EAA0D,EAA1DA,QAgBvBuB,EAAarB,cAAbqB,SACR,EAA2BpB,iBAASC,EAAW,CAAEC,cAAc,IAAvDC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UAEb,OACE,eAAC,IAAD,CAAMC,SAnBa,SAAC,GAOf,IANLgB,EAMI,EANJA,UACGf,EAKC,iBACAe,IAAcf,EAAOgB,SAIzBnB,EAAIiB,EAASd,IAASC,MAAMV,GAH1BA,EAAQ,IAAI0B,MAAM,8EAUpB,UACE,cAAC,IAAKf,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAAhE,SACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,qBAAMC,GAAG,eAE1C,cAAC,IAAKP,KAAN,CAAWC,KAAM,WAAYC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAAhE,SACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,YAAY,eAAKC,GAAG,eAE7C,cAAC,IAAKP,KAAN,CAAWC,KAAM,YAAaC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAAjE,SACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,YAAY,2BAAOC,GAAG,gBAE/C,cAAC,IAAKP,KAAN,UACE,cAACQ,EAAD,CAAYC,QAASb,EAAWc,SAAS,SAASL,KAAK,UAAvD,gC,SCtCO,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kC,iBCY1B,SAASW,IACtB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4B3B,iBAASC,EAAW,CAAEC,cAAc,IAAxD0B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAGf,OAFAC,YAAiB,oDAGf,eAACC,EAAD,WACE,cAACC,EAAD,IACA,cAACC,EAAD,IACA,eAACC,EAAD,WACE,cAACC,EAAD,UAAQT,EAAa,qBAAQ,uBAC7B,cAAC,IAAD,CAAUE,MAAOA,IAChBF,EAAa,cAAC,EAAD,CAAgB7B,QAASgC,IAAe,cAAC,EAAD,CAAahC,QAASgC,IAC5E,cAAC,IAAD,IACA,cAAC,IAAD,CAAQhB,KAAK,OAAOuB,QAAS,kBAAMT,GAAeD,IAAlD,SACGA,EAAa,qEAAgB,uEAOjC,IAAMV,EAAaqB,YAAOC,IAAPD,CAAH,4CAIjBF,EAAQE,IAAOE,GAAV,mFAKLN,EAAaI,IAAOG,IAAV,wVAQUC,EAAcC,GAGlCV,EAASK,IAAOM,OAAV,mIACQC,GAMdV,EAAaG,YAAOQ,IAAPR,CAAH,yLASVN,EAAYM,IAAOG,IAAV","file":"static/js/6.a5162320.chunk.js","sourcesContent":["import { useAuth } from 'context/auth-context';\nimport { Form, Input } from 'antd';\nimport { LongButton } from 'unauthenticated-app';\nimport { useAsync } from 'utils/use-async';\n\n// 鸭子类型(duck typing)：面向接口编程，而不是面向对象编程\n\nexport const LoginScreen = ({ onError }: { onError: (error: Error | null) => void }) => {\n  const handleSubmit = (values: { username: string; password: string }) => {\n    run(login(values)).catch(onError);\n  };\n\n  const { login } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item name={'username'} rules={[{ required: true, message: '请输入用户名' }]}>\n        <Input type=\"text\" placeholder=\"用户名\" id=\"username\" />\n      </Form.Item>\n      <Form.Item name={'password'} rules={[{ required: true, message: '请输入密码' }]}>\n        <Input type=\"password\" placeholder=\"密码\" id=\"password\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType=\"submit\" type=\"primary\">\n          登录\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { Form, Input } from 'antd';\nimport { useAuth } from 'context/auth-context';\nimport { LongButton } from 'unauthenticated-app';\nimport { useAsync } from 'utils/use-async';\n\n// 鸭子类型(duck typing)：面向接口编程，而不是面向对象编程\n\nexport const RegisterScreen = ({ onError }: { onError: (error: Error | null) => void }) => {\n  const handleSubmit = ({\n    cpassword,\n    ...values\n  }: {\n    username: string;\n    password: string;\n    cpassword: string;\n  }) => {\n    if (cpassword !== values.password) {\n      onError(new Error('请确认两次输入的密码相同'));\n      return;\n    }\n    run(register(values)).catch(onError);\n  };\n\n  const { register } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item name={'username'} rules={[{ required: true, message: '请输入用户名' }]}>\n        <Input type=\"text\" placeholder=\"用户名\" id=\"username\" />\n      </Form.Item>\n      <Form.Item name={'password'} rules={[{ required: true, message: '请输入密码' }]}>\n        <Input type=\"password\" placeholder=\"密码\" id=\"password\" />\n      </Form.Item>\n      <Form.Item name={'cpassword'} rules={[{ required: true, message: '请确认密码' }]}>\n        <Input type=\"password\" placeholder=\"确认密码\" id=\"cpassword\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType=\"submit\" type=\"primary\">\n          注册\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import { Button, Card, Divider } from 'antd';\nimport { useState } from 'react';\nimport { LoginScreen } from './login';\nimport { RegisterScreen } from './register';\nimport styled from '@emotion/styled';\nimport Logo from 'assets/logo.svg';\nimport Left from 'assets/left.svg';\nimport Right from 'assets/right.svg';\nimport { useAsync } from 'utils/use-async';\nimport { useDocumentTitle } from 'utils';\nimport { ErrorBox } from 'components/libs';\n\nexport default function UnauthenticatedApp() {\n  const [isRegister, setIsRegister] = useState(false);\n  const { error, setError } = useAsync(undefined, { throwOnError: true });\n  useDocumentTitle('请登录注册以继续');\n\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? '请注册' : '请登录'}</Title>\n        <ErrorBox error={error} />\n        {isRegister ? <RegisterScreen onError={setError} /> : <LoginScreen onError={setError} />}\n        <Divider />\n        <Button type=\"link\" onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? '已经有账号了？直接登录' : '没有账号？注册新账号'}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n}\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem), calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n  background-image: url(${Left}), url(${Right});\n`;\n\nconst Header = styled.header`\n  background: url(${Logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n"],"sourceRoot":""}