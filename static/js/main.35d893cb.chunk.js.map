{"version":3,"sources":["utils/index.ts","utils/http.ts","utils/use-async.ts","components/profiler.tsx","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx","auth-provider.ts","components/libs.tsx","context/auth-context.tsx"],"names":["cleanObject","obj","result","Object","keys","forEach","key","value","undefined","isVoid","useMount","callback","useEffect","useDebounce","delay","useState","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","window","location","href","origin","subset","filteredEntries","entries","filter","includes","fromEntries","useMountedRef","mountedRef","apiUrl","process","http","endpoint","a","data","token","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","reload","Promise","reject","json","ok","useHttp","user","useAuth","useCallback","defaultInitialState","stat","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","useReducer","state","action","safeDispatch","dispatch","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","queue","setInterval","length","queueToSend","console","log","Profiler","metadata","phases","props","onRender","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","push","ErrorBoundary","this","fallbackRender","children","React","Component","AuthenticatedApp","lazy","UnauthenticatedApp","App","className","FullPageErrorFallback","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","client","QueryClient","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","message","Text","type","ButtonNoPadding","Button","ScreenContainer","bootstrapUser","AuthContext","createContext","displayName","AuthProvider","setUser","queryClient","useQueryClient","Provider","form","clear","context","useContext"],"mappings":"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","file":"static/js/main.35d893cb.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === '';\n\n// let b: {[key: string]: unknown}\n// b = {name: 'Jack'}\n// b = () => {}\n\n// 在一个函数中，改变传入的对象本身是不好的\nexport const cleanObject = (obj: { [key: string]: unknown }) => {\n  const result = { ...obj };\n  Object.keys(result).forEach(key => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\n// 自定义hooks\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n  }, [callback]);\n};\n\n// const debounce = (func, delay) => {\n//   let timeout;\n//   return (...param) => {\n//     if (timeout) {\n//       clearTimeout(timeout);\n//     }\n//     timeout = setTimeout(function() {\n//       func(...param);\n//     }, delay);\n//   }\n// }\n// const log = debounce(() => console.log('call'), 5000)\n// log()\n// log()\n// log()\n//   ...5s\n// 执行！\n\n// 自定义hooks必须要在函数中用到其他的hooks，如果不使用hooks也能完成的功能，直接使用函数即可\n// 后面使用泛型规范类型\nexport const useDebounce = <V>(value: V, delay?: number) => {\n  // 每次在 value 变化以后，设置一个定时器\n  // delay 一般不会发生变化\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n\n    // 每次在上一个 useEffect 处理完以再运行\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// 练习 useArray\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n    add: (item: T) => setValue([...value, item]),\n  };\n};\n\nexport const useDocumentTitle = (title: string, keepOnUnmount: boolean = true) => {\n  const oldTitle = useRef(document.title).current;\n  // 页面加载时：旧title\n  // 加载后：新title\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        // 如果 useEffect 不指定依赖，读到的就是旧 Title\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 传入一个对象，和键集合，返回对应的对象中的键值对\n * @param obj\n * @param keys\n */\nexport const subset = <O extends { [key in string]: unknown }, K extends keyof O>(\n  obj: O,\n  keys: K[],\n) => {\n  const filteredEntries = Object.entries(obj).filter(([key]) => keys.includes(key as K));\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\n};\n\n// 用来返回组件的挂载状态，如果还没挂载或者已经制裁，返回false；否则返回true\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n","import { useCallback } from 'react';\nimport { useAuth } from './../context/auth-context';\nimport qs from 'qs';\nimport * as auth from 'auth-provider';\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\n\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {},\n) => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: token ? `Bearer ${token}` : '',\n      'Content-Type': data ? 'application/json' : '',\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === 'GET') {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async response => {\n    if (response.status === 401) {\n      await auth.logout();\n      window.location.reload();\n      return Promise.reject('请重新登录');\n    }\n    const data = await response.json();\n    if (response.ok) {\n      return data;\n    }\n    return Promise.reject(data);\n  });\n};\n\nexport const useHttp = () => {\n  const { user } = useAuth();\n  // TODO 讲解 TS Utility Types\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token],\n  );\n};\n\n// 联合类型\n// let myFavoriteNumber: string | number;\n// myFavoriteNumber = 'seven'\n// Type '{}' is not assignable to type 'string | number'.\n// Type '{}' is not assignable to type 'number'.ts(2322)\n// myFavoriteNumber = {}\n\n// 类型别名在很多情况下可以和 interface 互换\n// interface Person {\n//   name: string\n// }\n\n// type Person = { name: string }\n\n// 类型别名，interface 在这种情况下没法替换 type\n// type FavoriteNumber = string | number\n// let reseFavoriteNumber: FavoriteNumber = '6'\n\n// Utility Types\n// Parameters 读取所有的属性\n// Omit 删除某些属性\n// Partial 将所有属性变为可选\n","import { useMountedRef } from './index';\nimport { useCallback, useState, useReducer } from 'react';\ninterface State<D> {\n  error: null | Error;\n  data: D | null;\n  stat: 'idle' | 'loading' | 'error' | 'success';\n}\n\nconst defaultInitialState: State<null> = {\n  stat: 'idle',\n  data: null,\n  error: null,\n};\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const mountedRef = useMountedRef();\n\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [dispatch, mountedRef],\n  );\n};\n\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig) => {\n  const config = {\n    ...defaultConfig,\n    ...initialConfig,\n  };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initialState,\n    },\n  );\n\n  const safeDispatch = useSafeDispatch(dispatch);\n  const [retry, setRetry] = useState(() => () => {});\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: 'success',\n        error: null,\n      }),\n    [safeDispatch],\n  );\n\n  const setError = useCallback(\n    (error: Error | null) =>\n      safeDispatch({\n        error,\n        stat: 'error',\n        data: null,\n      }),\n    [safeDispatch],\n  );\n\n  // run 用来触发异步请求\n  const run = useCallback(\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n      if (!promise || !promise.then) {\n        throw new Error('请传入 Promise 类型数据');\n      }\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig?.retry(), runConfig);\n        }\n      });\n      // useCallback 依赖项使用 state，这里更新后会造成无限循环\n      safeDispatch({ stat: 'loading' });\n      return promise\n        .then(data => {\n          setData(data);\n          return data;\n        })\n        .catch(error => {\n          // catch 会消化异常，如果不主动抛出异常，外面是接收不到异常的\n          setError(error);\n          if (config.throwOnError) {\n            return Promise.reject(error);\n          }\n          return error;\n        });\n    },\n    [config.throwOnError, setData, setError, safeDispatch],\n  );\n\n  return {\n    isIdle: state.stat === 'idle',\n    isLoading: state.stat === 'loading',\n    isError: state.stat === 'error',\n    isSuccess: state.stat === 'success',\n    run,\n    setData,\n    setError,\n    // retry 被调用时，重新跑一遍 run，让 state 刷新一遍\n    retry,\n    ...state,\n  };\n};\n","import React, { ProfilerOnRenderCallback, ProfilerProps } from 'react';\n\ntype Props = { metadata?: any; phases?: ('mount' | 'update')[] } & Omit<ProfilerProps, 'onRender'>;\n\nlet queue: unknown[] = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) return;\n\n  const queueToSend = [...queue];\n  queue = [];\n  console.log(queueToSend);\n};\n\nsetInterval(sendProfileQueue, 5000);\n\nexport const Profiler = ({ metadata, phases, ...props }: Props) => {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id, // 发生提交的 Profiler 树的 “id”\n    phase, // \"mount\" （如果组件树刚加载） 或者 \"update\" （如果它重渲染了）之一\n    actualDuration, // 本次更新 committed 花费的渲染时间\n    baseDuration, // 估计不使用 memoization 的情况下渲染整颗子树需要的时间\n    startTime, // 本次更新中 React 开始渲染的时间\n    commitTime, // 本次更新中 React committed 的时间\n    interactions, // 属于本次更新的 interactions 的集合\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id, // 发生提交的 Profiler 树的 “id”\n        phase, // \"mount\" （如果组件树刚加载） 或者 \"update\" （如果它重渲染了）之一\n        actualDuration, // 本次更新 committed 花费的渲染时间\n        baseDuration, // 估计不使用 memoization 的情况下渲染整颗子树需要的时间\n        startTime, // 本次更新中 React 开始渲染的时间\n        commitTime, // 本次更新中 React committed 的时间\n        interactions, // 属于本次更新的 interactions 的集合\n      });\n    }\n  };\n\n  return <React.Profiler onRender={reportProfile} {...props} />;\n};\n","import React from 'react';\n\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\nexport class ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\n  { error: Error | null }\n> {\n  state = { error: null };\n\n  // 当子组件抛出异常，这里会接收到并且调用\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n    if (error) {\n      return fallbackRender({ error });\n    }\n    return children;\n  }\n}\n","import { ErrorBoundary } from 'components/error-boundary';\nimport { FullPageErrorFallback, FullPageLoading } from 'components/libs';\nimport { useAuth } from 'context/auth-context';\nimport './App.css';\nimport React from 'react';\n\nconst AuthenticatedApp = React.lazy(() => import('authenticated-app'));\nconst UnauthenticatedApp = React.lazy(() => import('unauthenticated-app'));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { AuthProvider } from './auth-context';\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  return (\n    <QueryClientProvider client={new QueryClient()}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","import './wdyr';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { loadServer, DevTools } from 'jira-dev-tool';\n// 务必在 jira-dev-tool 后面引入，否则会冲突\nimport 'antd/dist/antd.less';\nimport { AppProviders } from 'context';\nimport { Profiler } from 'components/profiler';\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <Profiler id=\"rootApp\" phases={['mount']}>\n        <AppProviders>\n          <DevTools />\n          <App />\n        </AppProviders>\n      </Profiler>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  ),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { User } from './types/User';\n// 在真实环境中，如果使用 firebase 这种第三方 auth 服务的话，本文件不需要开发者开发\n\nconst localStorageKey = '__auth_provider_token__';\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || '');\n  return user;\n};\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(async response => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    }\n    return Promise.reject(await response.json());\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(async response => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    }\n    return Promise.reject(await response.json());\n  });\n};\n\nexport const logout = async () => window.localStorage.removeItem(localStorageKey);\n","import styled from '@emotion/styled';\nimport { Button, Spin, Typography } from 'antd';\nimport { DevTools } from 'jira-dev-tool';\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  justify-content: ${props => (props.between ? 'space-between' : undefined)};\n  align-items: center;\n  margin-bottom: ${props => props.marginBottom + 'rem'};\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${props =>\n      typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size=\"large\" />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\n// 类型守卫\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error?: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type=\"danger\">{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import { User } from '../types/User';\nimport * as auth from '../auth-provider';\nimport React, { ReactNode, useCallback } from 'react';\nimport { http } from 'utils/http';\nimport { useMount } from 'utils';\nimport { useAsync } from 'utils/use-async';\nimport { FullPageErrorFallback, FullPageLoading } from 'components/libs';\nimport { useQueryClient } from 'react-query';\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http('me', { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: AuthForm) => Promise<void>;\n      register: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = 'AuthContext';\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(useCallback(() => run(bootstrapUser()), [run]));\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  if (isError) {\n    return <FullPageErrorFallback error={error} />;\n  }\n\n  return <AuthContext.Provider children={children} value={{ user, login, register, logout }} />;\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth 必须在 AuthProvider 中使用');\n  }\n\n  return context;\n};\n"],"sourceRoot":""}